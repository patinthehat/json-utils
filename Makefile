# vim: tabstop=4:softtabstop=4:shiftwidth=4:noexpandtab
# Makefile template

THISPROJECT="json-utils"
THISDATE=`date`

SRCPATH=src
BUILDDIR=build
INSTALLDIR=~/scripts
STRIPBINS=yes

ALLTARGETS=jsonread jsonwrite jsontest jsonpp jsonsemver
UTILFILES=$(SRCPATH)/utils.o $(SRCPATH)/util_files.o $(SRCPATH)/utils_json.o $(SRCPATH)/version_info.o

GCC_OPTIMIZE=-O1

JSON_C_DIR=/usr

CFLAGS += -I$(JSON_C_DIR)/include/json-c
LDFLAGS+= -L$(JSON_C_DIR)/lib -ljson-c

####################################################################

all: init libs $(ALLTARGETS)
	@echo "\n* Compiled all targets for $(THISPROJECT)."
	@exit 0

$(ALLTARGETS): init libs 
	@gcc $(GCC_OPTIMIZE) $(SRCPATH)/$@.c $(UTILFILES) $(LDFLAGS) -std=c99 -o $(BUILDDIR)/$@
	@if [ "$(STRIPBINS)" = "yes" ]; then strip $(BUILDDIR)/$@; fi
	@echo "* Build finished: '$@'"
	@exit 0

libs: $(UTILFILES)
	@exit 0

%.o : %.c
	@gcc $(GCC_OPTIMIZE) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
	@echo "* built '$@'"
	@exit 0

strip: 
	@if [ -f $(BUILDDIR)/jsonread ]; then  strip "$(BUILDDIR)/jsonread"; echo "* Stripped jsonread"; fi
	@if [ -f $(BUILDDIR)/jsonwrite ]; then  strip "$(BUILDDIR)/jsonwrite"; echo "* Stripped jsonwrite"; fi
	@if [ -f $(BUILDDIR)/jsonpp ]; then  strip "$(BUILDDIR)/jsonpp"; echo "* Stripped jsonpp"; fi
	@if [ -f $(BUILDDIR)/jsonsemver ]; then  strip "$(BUILDDIR)/jsonsemver"; echo "* Stripped jsonsemver"; fi
	@echo "\n* Stripped all built files."
	@exit 0

install: 
	@if [ -f $(BUILDDIR)/jsonread ]; then  cp $(BUILDDIR)/jsonread $(INSTALLDIR)/jsonread; echo "* Installed jsonread"; fi
	@if [ -f $(BUILDDIR)/jsonwrite ]; then  cp $(BUILDDIR)/jsonwrite $(INSTALLDIR)/jsonwrite; echo "* Installed jsonwrite"; fi
	@if [ -f $(BUILDDIR)/jsonsemver ]; then  cp $(BUILDDIR)/jsonsemver $(INSTALLDIR)/jsonsemver; echo "* Installed jsonsemver"; fi
	@echo "\n* Installed all built files."
	@exit 0

init:
##	@echo "//automatically generated by make" > src/build-date.h
##	@echo " " >> src/build-date.h
##	@echo "#define BUILD_DATE \"$(THISDATE)\"" >> src/build-date.h
	@exit 0


clean: 
	@rm $(UTILFILES)
	@echo "* Cleaned all built files."
	@exit 0
